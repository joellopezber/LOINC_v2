/**
 * Test para StorageService - Muestra informaci√≥n del estado
 */
async function testStorageService() {
    console.log('\nüß™ Iniciando diagn√≥stico de StorageService...');
    
    // 1. Estado inicial
    console.log('\n1Ô∏è‚É£ Estado del localStorage:');
    const initialLocalStorage = localStorage.getItem('searchConfig');
    console.log('localStorage:', initialLocalStorage ? JSON.parse(initialLocalStorage) : 'vac√≠o');
    
    // 2. Obtener configuraci√≥n del servicio
    console.log('\n2Ô∏è‚É£ Configuraci√≥n desde StorageService:');
    const config = await window.storageService.getSearchConfig();
    console.log('Configuraci√≥n actual:', config);
    
    // 3. Estado de la conexi√≥n
    console.log('\n3Ô∏è‚É£ Estado de la conexi√≥n:');
    console.log('WebSocket conectado:', window.socket?.connected);
    console.log('Socket ID:', window.socket?.id);
    
    // 4. Sincronizar con servidor
    console.log('\n4Ô∏è‚É£ Sincronizaci√≥n con servidor:');
    try {
        await window.storageService._syncWithServer();
        console.log('Sincronizaci√≥n completada');
    } catch (error) {
        console.log('Error en sincronizaci√≥n:', error);
    }
    
    // 5. Estado final
    console.log('\n5Ô∏è‚É£ Estado final:');
    const finalConfig = await window.storageService.getSearchConfig();
    console.log('Configuraci√≥n final:', finalConfig);
    
    console.log('\n‚úÖ Diagn√≥stico completado');
}

// Ejecutar diagn√≥stico cuando el documento est√© listo y conectado
document.addEventListener('DOMContentLoaded', () => {
    // Esperar conexi√≥n WebSocket
    const checkConnection = setInterval(() => {
        if (window.socket?.connected) {
            clearInterval(checkConnection);
            testStorageService().catch(error => {
                console.error('‚ùå Error en diagn√≥stico:', error);
            });
        }
    }, 100);
    
    // Timeout despu√©s de 5 segundos
    setTimeout(() => {
        clearInterval(checkConnection);
        if (!window.socket?.connected) {
            console.error('‚ùå WebSocket no conectado despu√©s de 5 segundos');
        }
    }, 5000);
}); 